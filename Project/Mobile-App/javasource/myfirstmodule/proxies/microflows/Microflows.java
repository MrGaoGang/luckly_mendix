// This file was generated by Mendix Modeler 7.16.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static void aCO_ADE_Registration_SetTotalNumberOfRegistrations(IContext context, myfirstmodule.proxies.Registration _registration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Registration", _registration == null ? null : _registration.getMendixObject());
			Core.execute(context, "MyFirstModule.ACO_ADE_Registration_SetTotalNumberOfRegistrations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Course_ScheduleTrainingEvent(IContext context, myfirstmodule.proxies.Course _course)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Course", _course == null ? null : _course.getMendixObject());
			Core.execute(context, "MyFirstModule.ACT_Course_ScheduleTrainingEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Trainee_Delete(IContext context, myfirstmodule.proxies.Trainee _trainee)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Trainee", _trainee == null ? null : _trainee.getMendixObject());
			Core.execute(context, "MyFirstModule.ACT_Trainee_Delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_TrainingEvent_CreateNew(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.ACT_TrainingEvent_CreateNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_TrainingEvent_Delete(IContext context, myfirstmodule.proxies.TrainingEvent _trainingEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrainingEvent", _trainingEvent == null ? null : _trainingEvent.getMendixObject());
			Core.execute(context, "MyFirstModule.ACT_TrainingEvent_Delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_TrainingEvent_ValidateAndCommit(IContext context, myfirstmodule.proxies.TrainingEvent _trainingEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrainingEvent", _trainingEvent == null ? null : _trainingEvent.getMendixObject());
			Core.execute(context, "MyFirstModule.ACT_TrainingEvent_ValidateAndCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Trainee createTrain(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.CreateTrain", params);
			return result == null ? null : myfirstmodule.proxies.Trainee.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCH_TrainingEvent_CalculateEndDate(IContext context, myfirstmodule.proxies.TrainingEvent _trainingEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrainingEvent", _trainingEvent == null ? null : _trainingEvent.getMendixObject());
			Core.execute(context, "MyFirstModule.OCH_TrainingEvent_CalculateEndDate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}