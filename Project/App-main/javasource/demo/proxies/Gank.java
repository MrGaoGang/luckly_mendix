// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package demo.proxies;

public class Gank
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject gankMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Demo.Gank";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		url("url"),
		who("who"),
		desc("desc"),
		source("source"),
		showType("showType"),
		used("used"),
		imagesURL("imagesURL");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Gank(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Demo.Gank"));
	}

	protected Gank(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject gankMendixObject)
	{
		if (gankMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Demo.Gank", gankMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Demo.Gank");

		this.gankMendixObject = gankMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Gank.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static demo.proxies.Gank initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return demo.proxies.Gank.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static demo.proxies.Gank initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new demo.proxies.Gank(context, mendixObject);
	}

	public static demo.proxies.Gank load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return demo.proxies.Gank.initialize(context, mendixObject);
	}

	public static java.util.List<demo.proxies.Gank> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<demo.proxies.Gank> result = new java.util.ArrayList<demo.proxies.Gank>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Demo.Gank" + xpathConstraint))
			result.add(demo.proxies.Gank.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of url
	 */
	public final java.lang.String geturl()
	{
		return geturl(getContext());
	}

	/**
	 * @param context
	 * @return value of url
	 */
	public final java.lang.String geturl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.url.toString());
	}

	/**
	 * Set value of url
	 * @param url
	 */
	public final void seturl(java.lang.String url)
	{
		seturl(getContext(), url);
	}

	/**
	 * Set value of url
	 * @param context
	 * @param url
	 */
	public final void seturl(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String url)
	{
		getMendixObject().setValue(context, MemberNames.url.toString(), url);
	}

	/**
	 * @return value of who
	 */
	public final java.lang.String getwho()
	{
		return getwho(getContext());
	}

	/**
	 * @param context
	 * @return value of who
	 */
	public final java.lang.String getwho(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.who.toString());
	}

	/**
	 * Set value of who
	 * @param who
	 */
	public final void setwho(java.lang.String who)
	{
		setwho(getContext(), who);
	}

	/**
	 * Set value of who
	 * @param context
	 * @param who
	 */
	public final void setwho(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String who)
	{
		getMendixObject().setValue(context, MemberNames.who.toString(), who);
	}

	/**
	 * @return value of desc
	 */
	public final java.lang.String getdesc()
	{
		return getdesc(getContext());
	}

	/**
	 * @param context
	 * @return value of desc
	 */
	public final java.lang.String getdesc(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.desc.toString());
	}

	/**
	 * Set value of desc
	 * @param desc
	 */
	public final void setdesc(java.lang.String desc)
	{
		setdesc(getContext(), desc);
	}

	/**
	 * Set value of desc
	 * @param context
	 * @param desc
	 */
	public final void setdesc(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String desc)
	{
		getMendixObject().setValue(context, MemberNames.desc.toString(), desc);
	}

	/**
	 * @return value of source
	 */
	public final java.lang.String getsource()
	{
		return getsource(getContext());
	}

	/**
	 * @param context
	 * @return value of source
	 */
	public final java.lang.String getsource(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.source.toString());
	}

	/**
	 * Set value of source
	 * @param source
	 */
	public final void setsource(java.lang.String source)
	{
		setsource(getContext(), source);
	}

	/**
	 * Set value of source
	 * @param context
	 * @param source
	 */
	public final void setsource(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String source)
	{
		getMendixObject().setValue(context, MemberNames.source.toString(), source);
	}

	/**
	 * @return value of showType
	 */
	public final java.lang.String getshowType()
	{
		return getshowType(getContext());
	}

	/**
	 * @param context
	 * @return value of showType
	 */
	public final java.lang.String getshowType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.showType.toString());
	}

	/**
	 * Set value of showType
	 * @param showtype
	 */
	public final void setshowType(java.lang.String showtype)
	{
		setshowType(getContext(), showtype);
	}

	/**
	 * Set value of showType
	 * @param context
	 * @param showtype
	 */
	public final void setshowType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String showtype)
	{
		getMendixObject().setValue(context, MemberNames.showType.toString(), showtype);
	}

	/**
	 * @return value of used
	 */
	public final java.lang.Boolean getused()
	{
		return getused(getContext());
	}

	/**
	 * @param context
	 * @return value of used
	 */
	public final java.lang.Boolean getused(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.used.toString());
	}

	/**
	 * Set value of used
	 * @param used
	 */
	public final void setused(java.lang.Boolean used)
	{
		setused(getContext(), used);
	}

	/**
	 * Set value of used
	 * @param context
	 * @param used
	 */
	public final void setused(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean used)
	{
		getMendixObject().setValue(context, MemberNames.used.toString(), used);
	}

	/**
	 * @return value of imagesURL
	 */
	public final java.lang.String getimagesURL()
	{
		return getimagesURL(getContext());
	}

	/**
	 * @param context
	 * @return value of imagesURL
	 */
	public final java.lang.String getimagesURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.imagesURL.toString());
	}

	/**
	 * Set value of imagesURL
	 * @param imagesurl
	 */
	public final void setimagesURL(java.lang.String imagesurl)
	{
		setimagesURL(getContext(), imagesurl);
	}

	/**
	 * Set value of imagesURL
	 * @param context
	 * @param imagesurl
	 */
	public final void setimagesURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String imagesurl)
	{
		getMendixObject().setValue(context, MemberNames.imagesURL.toString(), imagesurl);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return gankMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final demo.proxies.Gank that = (demo.proxies.Gank) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Demo.Gank";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
