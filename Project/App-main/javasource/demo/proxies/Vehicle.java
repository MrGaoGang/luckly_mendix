// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package demo.proxies;

public class Vehicle
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject vehicleMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Demo.Vehicle";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		VehicleID("VehicleID"),
		name("name"),
		color("color"),
		Style("Style");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Vehicle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Demo.Vehicle"));
	}

	protected Vehicle(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject vehicleMendixObject)
	{
		if (vehicleMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Demo.Vehicle", vehicleMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Demo.Vehicle");

		this.vehicleMendixObject = vehicleMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Vehicle.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static demo.proxies.Vehicle initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return demo.proxies.Vehicle.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static demo.proxies.Vehicle initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new demo.proxies.Vehicle(context, mendixObject);
	}

	public static demo.proxies.Vehicle load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return demo.proxies.Vehicle.initialize(context, mendixObject);
	}

	public static java.util.List<demo.proxies.Vehicle> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<demo.proxies.Vehicle> result = new java.util.ArrayList<demo.proxies.Vehicle>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Demo.Vehicle" + xpathConstraint))
			result.add(demo.proxies.Vehicle.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of VehicleID
	 */
	public final java.lang.Long getVehicleID()
	{
		return getVehicleID(getContext());
	}

	/**
	 * @param context
	 * @return value of VehicleID
	 */
	public final java.lang.Long getVehicleID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.VehicleID.toString());
	}

	/**
	 * Set value of VehicleID
	 * @param vehicleid
	 */
	public final void setVehicleID(java.lang.Long vehicleid)
	{
		setVehicleID(getContext(), vehicleid);
	}

	/**
	 * Set value of VehicleID
	 * @param context
	 * @param vehicleid
	 */
	public final void setVehicleID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long vehicleid)
	{
		getMendixObject().setValue(context, MemberNames.VehicleID.toString(), vehicleid);
	}

	/**
	 * @return value of name
	 */
	public final java.lang.String getname()
	{
		return getname(getContext());
	}

	/**
	 * @param context
	 * @return value of name
	 */
	public final java.lang.String getname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.name.toString());
	}

	/**
	 * Set value of name
	 * @param name
	 */
	public final void setname(java.lang.String name)
	{
		setname(getContext(), name);
	}

	/**
	 * Set value of name
	 * @param context
	 * @param name
	 */
	public final void setname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.name.toString(), name);
	}

	/**
	 * @return value of color
	 */
	public final java.lang.String getcolor()
	{
		return getcolor(getContext());
	}

	/**
	 * @param context
	 * @return value of color
	 */
	public final java.lang.String getcolor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.color.toString());
	}

	/**
	 * Set value of color
	 * @param color
	 */
	public final void setcolor(java.lang.String color)
	{
		setcolor(getContext(), color);
	}

	/**
	 * Set value of color
	 * @param context
	 * @param color
	 */
	public final void setcolor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String color)
	{
		getMendixObject().setValue(context, MemberNames.color.toString(), color);
	}

	/**
	 * Set value of Style
	 * @param style
	 */
	public final demo.proxies.VehicleType getStyle()
	{
		return getStyle(getContext());
	}

	/**
	 * @param context
	 * @return value of Style
	 */
	public final demo.proxies.VehicleType getStyle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Style.toString());
		if (obj == null)
			return null;

		return demo.proxies.VehicleType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Style
	 * @param style
	 */
	public final void setStyle(demo.proxies.VehicleType style)
	{
		setStyle(getContext(), style);
	}

	/**
	 * Set value of Style
	 * @param context
	 * @param style
	 */
	public final void setStyle(com.mendix.systemwideinterfaces.core.IContext context, demo.proxies.VehicleType style)
	{
		if (style != null)
			getMendixObject().setValue(context, MemberNames.Style.toString(), style.toString());
		else
			getMendixObject().setValue(context, MemberNames.Style.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return vehicleMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final demo.proxies.Vehicle that = (demo.proxies.Vehicle) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Demo.Vehicle";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
